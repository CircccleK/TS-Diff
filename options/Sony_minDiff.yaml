# general settings
name: Sony_minDiff
model_type: RepDiffModel
num_gpu: 3
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: train
    type: LL_Dataset
    gt_root: /mnt/s1/ly/data/SID/Sony/long
    input_root: /mnt/s1/ly/data/SID/Sony/short
#    gt_root: /data/ly/SID/Sony/long
#    input_root: /data/ly/SID/Sony/short
    fns_root: ./data/Sony/Sony_train.txt
    input_mode: crop
    concat_with_position_encoding: true
    concat_with_hiseq: true
    mean: [0.5, 0.5, 0.5]
    std: [0.5, 0.5, 0.5]
    use_flip: true

    bright_aug: true
    bright_aug_range: [0.5, 1.5]

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 6
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
    camera: SonyA7S2
#    camera: Virtual
#    virtual_camera_count: 5
    read_syn_data: False # 读合成噪声的npy
    read_real_data: True # 读合成噪声的npy
    read_virtual_camera: False
    crop_size: 256
    stage_in: raw # or srgb
    save_syn_data: False # 保存raw合成的噪声
    save_read_syn_data_to_rgb: False # 保存已经生成的raw合成噪声
    save_syn_rgb: False # 保存合成噪声rgb版
    real_data_root: /mnt/s1/ly/data/SID/Sony/short/
#    real_data_root: /data/ly/SID/Sony/short/
    train_syn_save_num: 1

  val:
    name: validation
    type: LL_Dataset
    gt_root: /mnt/s1/ly/data/SID/Sony/long
    input_root: /mnt/s1/ly/data/SID/Sony/short
#    gt_root: /data/ly/SID/Sony/long
#    input_root: /data/ly/SID/Sony/short
    # val
    fns_root: ./data/Sony/Sony_val_pre_123.txt
    # test
#    fns_root: ['./data/Sony_test_ratio_100_PMN.txt', './data/Sony_test_ratio_250_PMN.txt', './data/Sony_test_ratio_300_PMN.txt']
   # fns_root: ['./data/Sony_test_ratio_100_ELD.txt', './data/Sony_test_ratio_250_ELD.txt', './data/Sony_test_ratio_300_ELD.txt']
    concat_with_hiseq: true
    input_mode: crop
    divide: 32
    concat_with_position_encoding: true
    mean: [0.5, 0.5, 0.5]
    std: [0.5, 0.5, 0.5]
    stage_in: raw # or srgb
    crop_size: 1024
    read_real_data: True
    camera: SonyA7S2

#repnr_opt:
#  dont_convert_module:
#    - 'final_conv'
#    - 'mid'
#    - 'conv'
#    - 'attn'
#    - 'res_conv'
#  branch_num: 5
#  align_opts:
#    init_weight: 1.0
#    init_bias: 0.0

# network structures
network_unet:
  type: SR3UNet
  norm_groups: 32
  channel_mults: [1,2,4,8,8]
  attn_res: [16]
  res_blocks: 1
  dropout: 0.2
  divide: 16

network_global_corrector:
  type: GlobalCorrector
  normal01: true

network_ddpm:
  type: GaussianDiffusion
  image_size: 128
  conditional: true
  color_limit: -1
  pyramid_list: [1, 1, 2, 2]

ddpm_schedule:
  schedule: "linear"
  n_timestep: 2000
  linear_start: !!float 1e-6
  linear_end: !!float 1e-2
  sample_timesteps: 4
#  sample_timesteps: 20
#  sample_timesteps: 60

# path
path:
  
#  resume_state: ~
#  resume_state: /home/ly/RepDiff/experiments/Sony_pretrain/training_states/7500.state
  resume_state: /mnt/s1/ly/RepDiff/experiments/Sony_minDiff/training_states/40296.state
#  pretrain_network_g: ~
#  pretrain_network_g: /home/ly/RepDiff/experiments/Sony_pretrain/models/net_g_7500.pth
  pretrain_network_g: /mnt/s1/ly/RepDiff/experiments/Sony_minDiff/models/net_g_40296.pth
  ignore_resume_networks: ['network_identity']
  param_key_g: params # pretrain
  strict_load_g: True
  pretrain_network_d: ~

# validation settings
val:
  #cal_score: true
  best_val_loss: 28.32348455632786 # 重启训练的时候需要设置
  sample_type: ddim_pyramid_cs_sample
  fix_seed: true
  color_gamma: 1.0
  use_up_v2: true
  pyramid_list: [1, 1, 2, 2]
  ddim_eta: !!float 1.0
  use_kind_align: true
  cal_all: true
  show_all: true
#  val_freq: !!float 20
  val_freq_num: !!float 80
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr_skimage
    ssim:
      type: calculate_ssim_skimage

# training settings
train:
  cs_on_shift: true
  vis_train: true
  vis_num: 150
  train_type: ddpm_cs_pyramid
  t_border: 1000
  input_mode: crop
  stage_in: raw # or srgb
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.999]

  scheduler:
    type: MultiStepLR
#    milestones: [75000, 150000, 225000, 300000, 400000]
    epoch_milestones: [2500, 3500, 4500, 4800]
    gamma: 0.5

  total_epoch: 5000
#  total_iter: 250000
  warmup_iter: -1  # no warm up

# logging settings
logger:
#  print_freq: 100
#  save_checkpoint_freq: !!float 1000
  print_epoch: 5
  save_checkpoint_epoch: !!float 50
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true